@using Microsoft.AspNetCore.Identity;
@using Rocky.BLL.Languages;
@inject UserManager<AppUser> UserManager
@{
	var currentUser = UserManager.GetUserAsync(User).Result;
	double totalCartPrice = 0;
}
<!-- drawer menu start -->
<div class="offcanvas offcanvas-start d-flex d-lg-none" tabindex="-1" id="drawer-menu">
	<div class="offcanvas-wrapper">
		<div class="offcanvas-header border-btm-black">
			<h5 class="drawer-heading">Menu</h5>
			<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
					aria-label="Close"></button>
		</div>
		<div class="offcanvas-body p-0 d-flex flex-column justify-content-between">
			<nav class="site-navigation">
				<ul class="main-menu list-unstyled">
					<li class="menu-list-item nav-item has-dropdown @((string?)ViewData["Active"] == "Index" ? "active" : "")">
						<div class="mega-menu-header">
							<a class="nav-link" href="@Url.Action("Index", "Home")">
								@_phrase["General","Home"]
							</a>
						</div>
					</li>
					<li class="menu-list-item nav-item has-megamenu">
						<div class="mega-menu-header">
							<span class="open-submenu">
								<a class="nav-link" href="#">
									@_phrase["General","Categories"]
								</a>

								<svg class="icon icon-dropdown" xmlns="http://www.w3.org/2000/svg" width="24"
									 height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
									 stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
									<polyline points="9 18 15 12 9 6"></polyline>
								</svg>
							</span>
						</div>
						<div class="submenu-transform submenu-transform-desktop">
							<div class="offcanvas-header border-btm-black">
								<h5 class="drawer-heading btn-menu-back d-flex align-items-center">
									<svg class="icon icon-menu-back" xmlns="http://www.w3.org/2000/svg"
										 width="40" height="40" viewBox="0 0 24 24" fill="none"
										 stroke="currentColor" stroke-width="2" stroke-linecap="round"
										 stroke-linejoin="round">
										<polyline points="15 18 9 12 15 6"></polyline>
									</svg>
									<span class="menu-back-text">Categories</span>
								</h5>
							</div>
							<ul class="submenu list-unstyled">
								@if (CommonHelpers.Categories != null)
									@foreach (Category category in CommonHelpers.Categories)
									{
										<li class="menu-list-item nav-item-sub">
											<a class="nav-link-sub nav-text-sub" href="@Url.Action("View", "Category", new { id = category.Id })">
												@category.Name
											</a>
										</li>
									}
							</ul>
						</div>
					</li>

					@if (!this.IsAuthenticated())
					{
						<li class="menu-list-item nav-item has-dropdown @((string?)ViewData["Active"] == "Register" ? "active" : "")">
							<div class="mega-menu-header">
								<a class="nav-link" href="@Url.Action("Register", "Account")">
									@_phrase["General","Register"]
								</a>
							</div>
						</li>
					}
					else
					{
						<li class="menu-list-item nav-item has-megamenu">
							<div class="mega-menu-header">
								<span class="open-submenu">
									<a class="nav-link" href="#">
										@_phrase["General","Account"]
									</a>

									<svg class="icon icon-dropdown" xmlns="http://www.w3.org/2000/svg" width="24"
										 height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
										 stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
										<polyline points="9 18 15 12 9 6"></polyline>
									</svg>
								</span>
							</div>
							<div class="submenu-transform submenu-transform-desktop">
								<div class="offcanvas-header border-btm-black">
									<h5 class="drawer-heading btn-menu-back d-flex align-items-center">
										<svg class="icon icon-menu-back" xmlns="http://www.w3.org/2000/svg"
											 width="40" height="40" viewBox="0 0 24 24" fill="none"
											 stroke="currentColor" stroke-width="2" stroke-linecap="round"
											 stroke-linejoin="round">
											<polyline points="15 18 9 12 15 6"></polyline>
										</svg>
										<span class="menu-back-text">Account</span>
									</h5>
								</div>
								<ul class="submenu list-unstyled">
									<p class="text-center p-2">Hello, @currentUser.FirstName</p>
									<li><hr class="dropdown-divider"></li>
									@if (this.IsAdmin())
									{
										<li><a class="dropdown-item p-3" href="@Url.Action("Index", "Admin")">Admin CP</a></li>
									}
									else
									{
										<li><a class="dropdown-item p-3" href="@Url.Action("Profile", "Account")">@_phrase["General", "YourAccount"]</a></li>
										<li><a class="dropdown-item p-3" href="@Url.Action("Index", "Orders")">@_phrase["General", "YourOrders"]</a></li>
										<li><a class="dropdown-item p-3" href="@Url.Action("Index", "Cart")">Your Cart</a></li>
										<li><a class="dropdown-item p-3" href="@Url.Action("Index", "Wishlist")">Your Wishlist</a></li>
									}
									<li><a class="dropdown-item p-3" href="@Url.Action("Logout", "Account")">Sign Out</a></li>
								</ul>
							</div>
						</li>
					}
					<li class="menu-list-item nav-item has-dropdown @((string?)ViewData["Active"] == "Register" ? "active" : "")">
						<div class="mega-menu-header">
							<a class="nav-link" href="@Url.Action("Services", "Home")">
								@_phrase["General","OurServices"]
							</a>
						</div>
					</li>
					<li class="menu-list-item nav-item has-dropdown">
						<div class="mega-menu-header">
							<a class="nav-link" href="@Url.Action("Aboutus", "Index")">
								@_phrase["General","AboutUs"]
							</a>
						</div>
					</li>

					<li class="menu-list-item nav-item">
						<a class="nav-link" href="@Url.Action("Contact", "Index" )">
							@_phrase["General","Contact"]
						</a>
					</li>
				</ul>
			</nav>
			<ul class="utility-menu list-unstyled">
				<li class="utilty-menu-item">
					<a class="announcement-text" href="tel:+1-078-2376">
						<span class="utilty-icon-wrapper">
							<svg class="icon icon-phone" xmlns="http://www.w3.org/2000/svg" width="24"
								 height="24" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="1.5"
								 stroke-linecap="round" stroke-linejoin="round">
								<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z">
								</path>
							</svg>
						</span>
						@_phrase["General", "callX", "+1 078 2376"]
					</a>
				</li>
				<li class="utilty-menu-item">
					<a class="announcement-login announcement-text"
					   href="@(!this.IsAuthenticated() ? Url.Action("Login", "Account") : Url.Action("Logout", "Account"))">
						<span class="utilty-icon-wrapper">
							<svg class="icon icon-user" width="24" height="24" viewBox="0 0 10 11" fill="none"
								 xmlns="http://www.w3.org/2000/svg">
								<path d="M5 0C3.07227 0 1.5 1.57227 1.5 3.5C1.5 4.70508 2.11523 5.77539 3.04688 6.40625C1.26367 7.17188 0 8.94141 0 11H1C1 8.78516 2.78516 7 5 7C7.21484 7 9 8.78516 9 11H10C10 8.94141 8.73633 7.17188 6.95312 6.40625C7.88477 5.77539 8.5 4.70508 8.5 3.5C8.5 1.57227 6.92773 0 5 0ZM5 1C6.38672 1 7.5 2.11328 7.5 3.5C7.5 4.88672 6.38672 6 5 6C3.61328 6 2.5 4.88672 2.5 3.5C2.5 2.11328 3.61328 1 5 1Z"
									  fill="#000" />
							</svg>
						</span>
						<span>
							@(!this.IsAuthenticated() ? _phrase["General", "Login"] : _phrase["General", "Logout"])
							
						</span>
					</a>
				</li>
				<li class="utilty-menu-item">
					<button type="button" class="currency-btn btn-reset"
							data-bs-toggle="dropdown" aria-expanded="false">

						<img class="flag" src="~/assets/img/flag/@AppSettings.Culture.SupportedCulturesDetailed[AppSettings.LocalizationCulture].FlagImageName" alt="img">
						<span>@AppSettings.Culture.SupportedCulturesDetailed[AppSettings.LocalizationCulture].LangNameInNative</span>
						<span>
							<svg class="icon icon-dropdown" xmlns="http://www.w3.org/2000/svg"
								 width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#fff"
								 stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
								<polyline points="6 9 12 15 18 9"></polyline>
							</svg>
						</span>
					</button>

					<ul class="currency-list dropdown-menu dropdown-menu-end px-2">
						@foreach (KeyValuePair<string, LanguageBase> lang in AppSettings.Culture.SupportedCulturesDetailed)
						{
							<li class="currency-list-item">
								<a class="currency-list-option language-changer" href="#"
								   data-value="@lang.Value.Code">
									<img class="flag" src="~/assets/img/flag/@lang.Value.FlagImageName" alt="img">
									<span>@lang.Value.LangNameInNative</span>
								</a>
							</li>
						}
					</ul>
				</li>
			</ul>
		</div>
	</div>
</div>
<!-- drawer menu end -->
<!-- drawer cart start -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="drawer-cart">
	<div class="offcanvas-header border-btm-black">
		<h5 class="cart-drawer-heading text_16">Your Cart (@(CommonHelpers.Cart?.Items.Count() ?? 0))</h5>
		<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
				aria-label="Close"></button>
	</div>
	<div class="offcanvas-body p-0">
		@if (this.IsAuthenticated() && CommonHelpers.Cart is not null && CommonHelpers.Cart.Items.Count() > 0)
		{
			<div class="cart-content-area d-flex justify-content-between flex-column">
				<div class="minicart-loop custom-scrollbar">
					@foreach (var item in CommonHelpers.Cart.Items)
					{
						totalCartPrice += item.Product.Price;
						<!-- minicart item -->
						<div class="minicart-item d-flex">
							<div class="mini-img-wrapper">
								<img class="mini-img" src="@AppSettings.Product.ProductImagePath@item.Product.Image" alt="img">
							</div>
							<div class="product-info">
								<h2 class="product-title"><a href="#">@item.Product.Name</a></h2>
								@if (string.IsNullOrWhiteSpace(item.Product.Vendor))
								{
									<p class="product-vendor">By @item.Product.Vendor</p>
								}
								<div class="misc d-flex align-items-end justify-content-between">
									<div class="quantity d-flex align-items-center justify-content-between">
										<button class="qty-btn dec-qty">
											<img src="~/assets/img/icon/minus.svg"
												 alt="minus">
										</button>
										<input class="qty-input" type="number" name="qty" value="@(item.Qty)" min="0">
										<button class="qty-btn inc-qty">
											<img src="~/assets/img/icon/plus.svg"
												 alt="plus">
										</button>
									</div>
									<div class="product-remove-area d-flex flex-column align-items-end">
										<div class="product-price">@item.Product.Price.ToString("c")</div>
										<a href="#" class="product-remove">Remove</a>
									</div>
								</div>
							</div>
						</div>
					}
				</div>
				<div class="minicart-footer">
					<div class="minicart-calc-area">
						<div class="minicart-calc d-flex align-items-center justify-content-between">
							<span class="cart-subtotal mb-0">Subtotal</span>
							<span class="cart-subprice">@totalCartPrice.ToString("c")</span>
						</div>
						<p class="cart-taxes text-center my-4">
							Taxes and shipping will be calculated at checkout.
						</p>
					</div>
					<div class="minicart-btn-area d-flex align-items-center justify-content-between">
						<a href="@Url.Action("Index", "Cart")" class="minicart-btn btn-secondary">View Cart</a>
						<a href="@Url.Action("Index", "Checkout")" class="minicart-btn btn-primary">Checkout</a>
					</div>
				</div>
			</div>
		}
		else
		{
			<div class="cart-empty-area text-center py-5">
				<div class="cart-empty-icon pb-4">
					<svg xmlns="http://www.w3.org/2000/svg" width="70" height="70" viewBox="0 0 24 24" fill="none"
						 stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
						<circle cx="12" cy="12" r="10"></circle>
						<path d="M16 16s-1.5-2-4-2-4 2-4 2"></path>
						<line x1="9" y1="9" x2="9.01" y2="9"></line>
						<line x1="15" y1="9" x2="15.01" y2="9"></line>
					</svg>
				</div>
				<p class="cart-empty">You have no items in your cart</p>
			</div>
		}

	</div>
</div>
<!-- drawer cart end -->